library(httr)
direccion <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
archivo <- "ss06hid.csv"
download.file(direccion, archivo, method="curl")
direccion2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
archivo2 <- "PUMSDataDict06.pdf"
download.file(direccion2, archivo2, method="curl")
data <- read.table("ss06hid.csv", header = TRUE, sep = ",")
x <- names(data)
y <- strsplit(x, "wgtp")
y[123]
library(data.table)
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3, method="curl")
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
setnames(GDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "GDP"))
columnagdp <- as.numeric(gsub(",", "", GDP$GDP))
mean(columnagdp, na.rm = TRUE)
help(data.table)
install.packages(data.table)
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
setnames(GDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "GDP"))
columnagdp <- as.numeric(gsub(",", "", GDP$GDP))
mean(columnagdp, na.rm = TRUE)
install.packages("data.table")
library(data.table)
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3, method="curl")
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
setnames(GDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "GDP"))
columnagdp <- as.numeric(gsub(",", "", GDP$GDP))
mean(columnagdp, na.rm = TRUE)
grep("United$",countryNames), 3
grep("United$",countryNames)
grep("^United",countryNames), 4
grep("^United",countryNames)
grep("*United",countryNames), 5
grep("*United",countryNames)
grep("^United",countryNames), 3
grep("^United",countryNames)
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
power <- read.table("/Users/ruben.felomino/Documents/Unicorn/R Working Files/household_power_consumption.txt",header=T,sep=';')[-1,]
power$Date <- strptime(as.character(power$Date),format="%d/%m/%Y")
str(power)
powernew <- subset(power,Date=='2007-02-01' | Date=='2007-02-02')
str(powernew)
powernew1 <- powernew[1:20,]
ppowernew1
powernew1
str(powernew1)
powertime <- powernew1$Time
powertime
powertime <- as.table(powernew1$Time,header=T)
powertime <- as.data.frame(powernew1$Time,header=T)
powertime
str(powertime)
strptime(powertime,format="%H:%M:%S")
strptime(powertime$`powernew1$Time`,format="%H:%M:%S")
strptime(powertime$`powernew1$Time`,format="%H:%M:%S",tz=NULL)
as.POSIXct(powertime)
strptime(as.POSIXct(powertime$`powernew1$Time`),format="%H:%M:%S",tz=NULL)
strptime(as.character(powertime$`powernew1$Time`),format="%H:%M:%S",tz=NULL)
strptime(as.character(powertime$`powernew1$Time`),format="%H:%M:%S")
str(powernew)
powertime1
powernew1
as.POSIXct(paste(powernew1$Date, powernew1$Time)
as.POSIXct(paste(powernew1$Date, powernew1$Time), format="%Y-%m-%d %H:%M:%S")
t<-as.POSIXct(paste(powernew1$Date, powernew1$Time), format="%Y-%m-%d %H:%M:%S")
str(t)
t <- strptime(as.character(t),format="%d/%m/%Y %H:%M:%S")
str(t)
t <- as.Date(as.character(t),format="%d/%m/%Y %H:%M:%S")
str(t)
t
t<-as.POSIXct(paste(powernew1$Date, powernew1$Time), format="%Y-%m-%d %H:%M:%S")
str(t)
?merge
?cbind
?paste
powernew1$Date_Time <- paste(as.character(powernew1$Date), as.character(powernew1$Time))
powernew1
powernew_re[,powernew1$Date_Time,powernew1$Global_active_power]
powernew_re<-powernew1[,powernew1$Date_Time,powernew1$Global_active_power]
powernew_re[,c(powernew1$Date_Time,powernew1$Global_active_power)]
power_re <-powernew1
str(power_re)
power_re[,c(power_re$Date_Time,power_re$Global_active_power)]
power_re <- table[order(power_re$Date_Time),]
mydf <- data.frame(matrix(1:12, ncol = 4))
mydf
moveme(names(mydf), "X4 first")
?moveme
power_re[,c(10,1,2,3,4,5,6,7,8,9)]
str(powernew1)
str(powernew)
powernew$Date_Time <- paste(as.character(powernew$Date), as.character(powernew$Time))
str(powernew)
powernew <- powernew[,c(10,1,2,3,4,5,6,7,8,9)]
str(powernew)
pow <- powernew[,c(1,4,5,6,7,8,9,10)]
str(pow)
str(powernew)
powernew$Global_active_power <- as.numeric(as.character(powernew$Global_active_power))
powernew$Global_reactive_power <- as.numeric(as.character(powernew$Global_reactive_power))
powernew$Voltage <- as.numeric(as.character(powernew$Voltage))
powernew$Global_intensity <- as.numeric(as.character(powernew$Global_intensity))
powernew$Sub_metering_1 <- as.numeric(as.character(powernew$Sub_metering_1))
powernew$Sub_metering_2 <- as.numeric(as.character(powernew$Sub_metering_2))
str(powernew)
powernew <- powernew[,c(1,4,5,6,7,8,9,10)]
str(powernew)
str(powernew)
powernew$Date_Time <- strptime(powernew$Date_Time,format="%d/%m/%Y %H:%M:%S")
str(powernew)
powernew[1:5,]
str(powernew)
power <- read.table("/Users/ruben.felomino/Documents/Unicorn/R Working Files/household_power_consumption.txt",header=T,sep=';')[-1,]
power <- read.table("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/household_power_consumption.txt",header=T,sep=';')[-1,]
power$Date <- strptime(as.character(power$Date),format="%d/%m/%Y")
powernew <- subset(power,Date=='2007-02-01' | Date=='2007-02-02')
powernew$Date_Time <- paste(as.character(powernew$Date), as.character(powernew$Time))
powernew <- powernew[,c(10,3,4,5,6,7,8,9)]
powernew$Global_active_power <- as.numeric(as.character(powernew$Global_active_power))
powernew$Global_reactive_power <- as.numeric(as.character(powernew$Global_reactive_power))
powernew$Voltage <- as.numeric(as.character(powernew$Voltage))
powernew$Global_intensity <- as.numeric(as.character(powernew$Global_intensity))
powernew$Sub_metering_1 <- as.numeric(as.character(powernew$Sub_metering_1))
powernew$Sub_metering_2 <- as.numeric(as.character(powernew$Sub_metering_2))
ppowernew$Date_Time <- strptime(as.character(powernew$Date_Time),format="%Y-%m-%d %H:%M:%S")
powernew$Date_Time <- strptime(as.character(powernew$Date_Time),format="%Y-%m-%d %H:%M:%S")
str(powernew)
plot(powernew$Date_Time, powernew$Sub_metering_1, type="l",xlab= "",ylab="Energy sub Metering")
lines(powernew$Date_Time, powernew$Sub_metering_2,col="red")
lines(powernew$Date_Time, powernew$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty = 1,col=c("black","red","blue"))
?par
par(mfrow=c(2,2)) with(powernew),
{
plot(powernew$Date_Time, powernew$Global_active_power, type="l",xlab= "",ylab="Global Active Power")
plot(powernew$Date_Time, powernew$Voltage, type="l",xlab= "datetime",ylab="Voltage")
plot(powernew$Date_Time, powernew$Sub_metering_1, type="l",xlab= "",ylab="Energy sub Metering")
lines(powernew$Date_Time, powernew$Sub_metering_2,col="red")
lines(powernew$Date_Time, powernew$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty = 1,col=c("black","red","blue"))
plot(powernew$Date_Time, powernew$Global_reactive_power, type="l",xlab= "datetime",ylab="Global_reactive_power")
})
par(mfrow=c(2,2)) with(powernew,
{
plot(powernew$Date_Time, powernew$Global_active_power, type="l",xlab= "",ylab="Global Active Power")
plot(powernew$Date_Time, powernew$Voltage, type="l",xlab= "datetime",ylab="Voltage")
plot(powernew$Date_Time, powernew$Sub_metering_1, type="l",xlab= "",ylab="Energy sub Metering")
lines(powernew$Date_Time, powernew$Sub_metering_2,col="red")
lines(powernew$Date_Time, powernew$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty = 1,col=c("black","red","blue"))
plot(powernew$Date_Time, powernew$Global_reactive_power, type="l",xlab= "datetime",ylab="Global_reactive_power")
})
par(mfrow=c(2,2)) with(powernew,
{
plot(powernew$Date_Time, powernew$Global_active_power, type="l",xlab= "",ylab="Global Active Power")
plot(powernew$Date_Time, powernew$Voltage, type="l",xlab= "datetime",ylab="Voltage")
plot(powernew$Date_Time, powernew$Sub_metering_1, type="l",xlab= "",ylab="Energy sub Metering")
lines(powernew$Date_Time, powernew$Sub_metering_2,col="red")
lines(powernew$Date_Time, powernew$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty = 1,col=c("black","red","blue"))
plot(powernew$Date_Time, powernew$Global_reactive_power, type="l",xlab= "datetime",ylab="Global_reactive_power")
})
par(mfrow=c(2,2))
with(powernew,
{
plot(powernew$Date_Time, powernew$Global_active_power, type="l",xlab= "",ylab="Global Active Power")
plot(powernew$Date_Time, powernew$Voltage, type="l",xlab= "datetime",ylab="Voltage")
plot(powernew$Date_Time, powernew$Sub_metering_1, type="l",xlab= "",ylab="Energy sub Metering")
lines(powernew$Date_Time, powernew$Sub_metering_2,col="red")
lines(powernew$Date_Time, powernew$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty = 1,col=c("black","red","blue"))
plot(powernew$Date_Time, powernew$Global_reactive_power, type="l",xlab= "datetime",ylab="Global_reactive_power")
})
png("plot4.png", width=480, height=480)
par(mfrow=c(2,2))
with(powernew,
{
plot(powernew$Date_Time, powernew$Global_active_power, type="l",xlab= "",ylab="Global Active Power")
plot(powernew$Date_Time, powernew$Voltage, type="l",xlab= "datetime",ylab="Voltage")
plot(powernew$Date_Time, powernew$Sub_metering_1, type="l",xlab= "",ylab="Energy sub Metering")
lines(powernew$Date_Time, powernew$Sub_metering_2,col="red")
lines(powernew$Date_Time, powernew$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty = 1,col=c("black","red","blue"))
plot(powernew$Date_Time, powernew$Global_reactive_power, type="l",xlab= "datetime",ylab="Global_reactive_power")
})
dev.off()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
rds <- readRDS("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/exdata-data-NEI_data/summarySCC_PM25.rds")
str(rds)
plot(rds$year,rds$Emissions,type="l")
?plot
?lines
lines(rds$year,rds$Emissions,type="l")
plot(rds$year,rds$Emissions,type="o")
plot(rds$year,rds$Emissions,type="p")
rds <- readRDS("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/exdata-data-NEI_data/summarySCC_PM25.rds")
?aggregate
str(rds)
aggrds <- aggregate(Emissions~year,rds,mean)
aggrds
plot(Emissions,year)
plot(aggrds,Emissions,year)
plot(aggrds$Emissions,aggrds$year)
plot(aggrds$year,aggrds$Emissions,type="l")
aggrds <- aggregate(Emissions~year,rds,sum)
plot(aggrds$year,aggrds$Emissions,type="l")
?plot
plot(aggrds$year,aggrds$Emissions/1000,type="l")
plot(aggrds$year,aggrds$Emissions/1000,type="l",xlab="Total PM2.5 Emissions(Tons)",ylab="Year")
plot(aggrds$year,aggrds$Emissions/1000,type="l",ylab="Total PM2.5 Emissions(Tons)",xlab="Year")
png("PMQ1.png", width=480, height=480)
plot(aggrds$year,aggrds$Emissions/1000,type="l",ylab="Total PM2.5 Emissions(Tons)",xlab="Year")
dev.off()
?subset
rdsbal <- subset(rds,fips=="24510")
str(rdsbal)
rds <- readRDS("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/exdata-data-NEI_data/summarySCC_PM25.rds")
str(rds)
rds1 <- readRDS("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/exdata-data-NEI_data/Source_Classification_Code.rds")
str(rds1)
rds1[1:5,]
?grepl
PMQ4 <- rds1[grepl("Combustion",SCC.Level.One) ]
PMQ4 <- rds1[grepl("Combustion",rds1$SCC.Level.One) ]
PMQ4 <- as.data.frame(rds1[grepl("Combustion",rds1$SCC.Level.One)])
PMQ4 <- rds1[grepl("Combustion",rds1$SCC.Level.One), ]
str(PMQ4)
PMQ4[1:5,]
SCC <- readRDS("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/exdata-data-NEI_data/Source_Classification_Code.rds")
data<-transform(NEI,type=factor(type),year=factor(year))
combustion<-as.data.frame(SCC[grep("combustion",SCC$SCC.Level.One,ignore.case=T) &
grep("coal",SCC$SCC.Level.Three,ignore.case=T),1])
names(combustion)<-"SCC"
data2<-merge(combustion,data,by="SCC")
str(PMQ4)
PMQ4 <- rds1[grepl("Coal Combustion",rds1$SCC.Level.One), ]
str(PMQ4)
PMQ4[1:10,]
PMQ4 <- rds1[grepl("Coal Combustion",rds1$SCC.Level.One), ]
str(PMQ4)
PMQ4[1:10,]
str(PMQ4)
PMQ4 <- rds1[grepl("Coal",rds1$SCC.Level.One), ]
str(PMQ4)
str(rds1)
str(rds)
PMQ4 <- rds1[grepl("Coal",rds1$IE.Sector), ]
str(PMQ4)
PMQ4 <- rds1[grepl("Combustion",rds1$IE.Sector), ]
PMQ4
str(rds)
str(rds1)
rds1[1:10,]
PMQ4 <- rds1[grepl("Coal",rds1$Short.Name), ]
str(PMQ4)
PMQ4[1:10,]
PMQ4$Created_Date <- strptime(as.character(PMQ4$Created_Date),format="%d/%m/%Y")
str(PMQ4)
PMQ4[1:10,]
recycled <- readRDS("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/OrigBillsRecycled.csv")
recycled <- read.csv("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/OrigBillsRecycled.csv")
str(recycled)
rec <- c(recycled$vend_labl,recycled$fb_amt)
str(rec)
rec <- data.frame(c(recycled$vend_labl,recycled$fb_amt))
str(rec)
rec <- data.frame(c[recycled$vend_labl,recycled$fb_amt])
rec <- data.frame([recycled$vend_labl,recycled$fb_amt])
rec <- data.frame(recycled$vend_labl,recycled$fb_amt)
str(rec)
rec[1:5,]
rec <- as.table(recycled$vend_labl,recycled$fb_amt)
rec <- as.table.default(recycled$vend_labl,recycled$fb_amt)
rec <- as.table.default()
rec <- recycled[c(recycled$vend_labl,recycled$fb_amt)]
rec <- recycled[data.frame(recycled$vend_labl,recycled$fb_amt)]
rec <-recycled[,c(recycled$vend_labl,recycled$fb_amt)]
rec <-recycled[,c(vend_labl,fb_amt)]
rec <-recycled[,c("vend_labl","fb_amt")]
str(rec)
rec$fb_amt <- as.numeric(as.character(rec$fb_amt))
str(rec)
rec[1:5,]
?gsub
gsub("([ab])", "\\1_\\1_", "abc and ABC")
rec <-recycled[,c("vend_labl","fb_amt")]
str(rec)
rec$fb_amt <- gsub(",","",rec$fb_amt)
str(rec)
rec$fb_amt <- as.numeric(as.character(rec$fb_amt))
rec[1:5,]
str(rec)
aggrec <- aggregate(vend_labl~fb_amt,rec,sum)
aggrec <- aggregate(.~fb_amt,rec,sum)
aggrec
aggrec <- aggregate(vend_labl~.,rec,sum)
aggrec <- aggregate(.~vend_labl,rec,sum)
aggrec
barplot(rec$vend_labl,rec$fb_amt/1000)
?plot
barplot(rec$vend_labl,rec$fb_amt/1000,type="h")
plot(rec$vend_labl,rec$fb_amt/1000,type="h")
?plot
plot(rec$vend_labl,rec$fb_amt/10000,type="h")
?plot
plot(rec$vend_labl,rec$fb_amt/10000,type="h")
str(risk)
dupclass <- read.csv("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/Duplicate Classification/DuplicateClassification_FebtoApr_2015.csv")
str(dupclass)
names(dupclass)
?coord_polar
library(ggplot2)
?coord_polar
Here is a sample
activity <- read.csv("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/RepData_PeerAssessment1/activity.csv")
str(activity)
activitynoNA <- subset(activity,is.na(steps))
str(activitynoNA)
activitynoNA[1:5,]
activitynoNA <- subset(activity,steps= NA)
activitynoNA[1:5,]
activitynoNA <- subset(activity,steps != NA)
activitynoNA[1:5,]
activitynoNA <- subset(activity,steps != "NA")
activitynoNA[1:5,]
activitynoNA[1:15,]
str(activitynoNA)
activitynoNA <- subset(activity,!is.na(steps))
str(activitynoNA)
activitynoNA[1:15,]
setwd("/Users/ruben.felomino/Documents/Unicorn/RWorkingFiles/RepData_PeerAssessment1/")
activity <- read.csv("activity.csv")
str(activity)
?opts_chunk
library("knitr")
str(activitynoNA)
activitynoNA$date <- strptime(as.character(activitynoNA$date),format="%d/%m/%Y")
str(activitynoNA)
activitynoNA[1:15,]
activitynoNA <- subset(activity,!is.na(steps))
str(activitynoNA)
activitynoNA$date <- as.Date(activitynoNA$date)
str(activitynoNA)
activitynoNA[1:15,]
hist(activitynoNA,date~steps)
hist(activitynoNA$date~activitynoNA$steps)
hist(activitynoNA,activitynoNA$date~activitynoNA$steps)
hist(activitynoNA$steps~activitynoNA$date)
hist(activitynoNA,steps~date)
?hist
plot(activitynoNA,date~steps)
plot(activitynoNA,steps~date)
hist(activitynoNA$steps,breaks=activitynoNA$date)
hist(activitynoNA$date)
?qplot
library("ggplot2")
?qplot
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram()
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="bin")
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="identity")
?aggregate
aggreate(activitynoNA$date~activitynoNA$steps,FUN=mean)
aggregate(activitynoNA$date~activitynoNA$steps,FUN=mean)
aggregate(.~activitynoNA$date,FUN=mean)
aggregate(activitynoNA$date~.,FUN=mean)
aggregate(.~activitynoNA$steps,FUN=mean)
aggregate(activitynoNA,.~date,FUN=mean)
aggregate(activitynoNA,.~steps,FUN=mean)
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="summary",fun="mean")
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="summary",fun.y="mean")
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="summary",fun.y="median")
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="summary",fun.y="mean")
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="summary",fun.y="median")
ggplot(activitynoNA,aes(x=date,y=steps)) + geom_histogram(stat="identity",fun.y="median")
oct15 <- subset(activitynoNA,date=="2012-10-15")
oct15
?aggregate
aggregate <- (steps ~ date,activitynoNA,mean)
aggregate <- (steps ~ date,data=activitynoNA,mean)
aggregate(steps ~ date,data=activitynoNA,mean)
aggregate(steps ~ date,data=activitynoNA,median)
